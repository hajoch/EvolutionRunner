
Generation: 0
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=0.9395 Adjusted=0.5155968032998195 Hits=0
Tree 0:
 (selector[buildFactory, failer(buildRadar), highMetal]
     buildFactory (failer(buildRadar) buildRadar)
     highMetal)

Generation: 1
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=0.926 Adjusted=0.5192107995846313 Hits=0
Tree 0:
 (selector[succeeder(failer(untilFail(inverter(failer(buildFactory))))), untilFail(sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar]), inverter(failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]))]
     (succeeder(failer(untilFail(inverter(failer(buildFactory)))))
         (failer(untilFail(inverter(failer(buildFactory))))
             (untilFail(inverter(failer(buildFactory)))
                 (inverter(failer(buildFactory)) (failer(buildFactory)
                     buildFactory))))) (untilFail(sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar])
     (sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar]
         (selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])]
             (succeeder(inverter(buildLotus)) (inverter(buildLotus)
                 buildLotus)) (succeeder(untilFail(highEnergy))
             (untilFail(highEnergy) highEnergy)) (untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])
             (sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss]
                 lowEnergy lowEnergy lowEnergy buildGauss)))
         (untilSucceed(inverter(untilSucceed(buildLotus)))
             (inverter(untilSucceed(buildLotus)) (untilSucceed(buildLotus)
                 buildLotus))) (selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])]
         (untilFail(inverter(buildStorage)) (inverter(buildStorage)
             buildStorage)) (succeeder(selector[lowEnergy, buildRadar, buildFactory])
         (selector[lowEnergy, buildRadar, buildFactory]
             lowEnergy buildRadar buildFactory)) (succeeder(selector[buildRadar, buildGauss, buildLotus])
         (selector[buildRadar, buildGauss, buildLotus]
             buildRadar buildGauss buildLotus))) buildRadar))
     (inverter(failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]))
         (failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus])
             (sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]
                 (untilFail(inverter(buildRadar)) (inverter(buildRadar)
                     buildRadar)) (inverter(failer(highEnergy))
                 (failer(highEnergy) highEnergy)) (failer(buildRadar)
                 buildRadar) buildLotus))))

Generation: 2
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=0.8905 Adjusted=0.5289605924358636 Hits=0
Tree 0:
 (selector[buildFactory, inverter(failer(buildFactory)), highMetal]
     buildFactory (inverter(failer(buildFactory))
     (failer(buildFactory) buildFactory)) highMetal)

Generation: 3
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=0.926 Adjusted=0.5192107995846313 Hits=0
Tree 0:
 (selector[succeeder(failer(untilFail(inverter(failer(buildFactory))))), untilFail(sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar]), inverter(failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]))]
     (succeeder(failer(untilFail(inverter(failer(buildFactory)))))
         (failer(untilFail(inverter(failer(buildFactory))))
             (untilFail(inverter(failer(buildFactory)))
                 (inverter(failer(buildFactory)) (failer(buildFactory)
                     buildFactory))))) (untilFail(sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar])
     (sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar]
         (selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])]
             (succeeder(inverter(buildLotus)) (inverter(buildLotus)
                 buildLotus)) (succeeder(untilFail(highEnergy))
             (untilFail(highEnergy) highEnergy)) (untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])
             (sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss]
                 lowEnergy lowEnergy lowEnergy buildGauss)))
         (untilSucceed(inverter(untilSucceed(buildLotus)))
             (inverter(untilSucceed(buildLotus)) (untilSucceed(buildLotus)
                 buildLotus))) (selector[untilFail(inverter(buildStorage)), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])]
         (untilFail(inverter(buildStorage)) (inverter(buildStorage)
             buildStorage)) (succeeder(selector[lowEnergy, buildRadar, buildFactory])
         (selector[lowEnergy, buildRadar, buildFactory]
             lowEnergy buildRadar buildFactory)) (succeeder(selector[buildRadar, buildGauss, buildLotus])
         (selector[buildRadar, buildGauss, buildLotus]
             buildRadar buildGauss buildLotus))) buildRadar))
     (inverter(failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]))
         (failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus])
             (sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]
                 (untilFail(inverter(buildRadar)) (inverter(buildRadar)
                     buildRadar)) (inverter(failer(highEnergy))
                 (failer(highEnergy) highEnergy)) (failer(buildRadar)
                 buildRadar) buildLotus))))

Generation: 4
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=0.922 Adjusted=0.5202913631633714 Hits=0
Tree 0:
 (selector[succeeder(failer(untilFail(inverter(failer(buildFactory))))), untilFail(sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(highMetal), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar]), inverter(failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]))]
     (succeeder(failer(untilFail(inverter(failer(buildFactory)))))
         (failer(untilFail(inverter(failer(buildFactory))))
             (untilFail(inverter(failer(buildFactory)))
                 (inverter(failer(buildFactory)) (failer(buildFactory)
                     buildFactory))))) (untilFail(sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(highMetal), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar])
     (sequence[selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])], untilSucceed(inverter(untilSucceed(buildLotus))), selector[untilFail(highMetal), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])], buildRadar]
         (selector[succeeder(inverter(buildLotus)), succeeder(untilFail(highEnergy)), untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])]
             (succeeder(inverter(buildLotus)) (inverter(buildLotus)
                 buildLotus)) (succeeder(untilFail(highEnergy))
             (untilFail(highEnergy) highEnergy)) (untilFail(sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss])
             (sequence[lowEnergy, lowEnergy, lowEnergy, buildGauss]
                 lowEnergy lowEnergy lowEnergy buildGauss)))
         (untilSucceed(inverter(untilSucceed(buildLotus)))
             (inverter(untilSucceed(buildLotus)) (untilSucceed(buildLotus)
                 buildLotus))) (selector[untilFail(highMetal), succeeder(selector[lowEnergy, buildRadar, buildFactory]), succeeder(selector[buildRadar, buildGauss, buildLotus])]
         (untilFail(highMetal) highMetal) (succeeder(selector[lowEnergy, buildRadar, buildFactory])
         (selector[lowEnergy, buildRadar, buildFactory]
             lowEnergy buildRadar buildFactory)) (succeeder(selector[buildRadar, buildGauss, buildLotus])
         (selector[buildRadar, buildGauss, buildLotus]
             buildRadar buildGauss buildLotus))) buildRadar))
     (inverter(failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]))
         (failer(sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus])
             (sequence[untilFail(inverter(buildRadar)), inverter(failer(highEnergy)), failer(buildRadar), buildLotus]
                 (untilFail(inverter(buildRadar)) (inverter(buildRadar)
                     buildRadar)) (inverter(failer(highEnergy))
                 (failer(highEnergy) highEnergy)) (failer(buildRadar)
                 buildRadar) buildLotus))))
