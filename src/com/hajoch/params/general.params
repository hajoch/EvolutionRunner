
#==========Evolution==============
ec.Evolve

#==========Init===================
state                                   =       ec.simple.SimpleEvolutionState
init                                    =       ec.gp.GPInitializer
finish                                  =       ec.simple.SimpleFinisher
exch                                    =       ec.simple.SimpleExchanger
breed                                   =       ec.simple.SimpleBreeder
eval                                    =       ec.simple.SimpleEvaluator
stat                                    =       ec.simple.SimpleStatistics

generations                             =       1000
quit-on-run-complete                    =       false

#==========Population=============
pop                                     =       ec.Population
pop.subpops                             =       1
pop.subpop.0                            =       ec.Subpopulation
pop.subpop.0.size                       =       10
pop.subpop.0.species                    =       ec.gp.GPSpecies
pop.subpop.0.species.ind                =       ec.gp.GPIndividual

pop.subpop.0.duplicate-retries          =       100

#==========Trees==================
pop.subpop.0.species.ind.numtrees       =       1
pop.subpop.0.species.ind.tree.0         =       ec.gp.GPTree
pop.subpop.0.species.ind.tree.0.tc      =       tc0

#==========Pipelines==============
pop.subpop.0.species.pipe               =       ec.breed.MultiBreedingPipeline
pop.subpop.0.species.pipe.generate-max  =       false

#crossover and reproduction probabilities
pop.subpop.0.species.pipe.num-sources   =       2
pop.subpop.0.species.pipe.source.0      =       ec.gp.koza.CrossoverPipeline
pop.subpop.0.species.pipe.source.0.prob =       0.9
pop.subpop.0.species.pipe.source.1      =       ec.breed.ReproductionPipeline
pop.subpop.0.species.pipe.source.1.prob =       0.1

#==========Selection==============
#reproduction
breed.reproduce.source.0                =       ec.select.TournamentSelection

#crossover
gp.koza.xover.source.0                  =       ec.select.TournamentSelection
gp.koza.xover.source.1                  =       ec.select.TournamentSelection
gp.koza.xover.ns.0                      =       ec.gp.koza.KozaNodeSelector
gp.koza.xover.ns.1                      =       ec.gp.koza.KozaNodeSelector
gp.koza.xover.maxdepth                  =       20
gp.koza.xover.tries                     =       1

#mutation
gp.koza.mutate.source.0                 =       ec.select.TournamentSelection
gp.koza.mutate.ns.0                     =       ec.gp.koza.KozaNodeSelector
gp.koza.mutate.build.0                  =       ec.gp.koza.GrowBuilder
gp.koza.mutate.maxdepth                 =       20
gp.koza.mutate.tries                    =       1

select.tournament.size                  =       7

gp.koza.grow.min-depth                  =       5
gp.koza.grow.max-depth                  =       5

#node selection
gp.koza.ns.terminals                    =       0.1
gp.koza.ns.nonterminals                 =       0.9
gp.koza.ns.root                         =       0.0

#==========Function set===========
gp.fs.size                              =       1
gp.fs.0                                 =       ec.gp.GPFunctionSet
gp.fs.0.name                            =       f0

#==========Threading==============
evalthreads                             =       1
breedthreads                            =       1

#==========Fitness================
pop.subpop.0.species.fitness            =       ec.gp.koza.KozaFitness

#==========Breeder================
breed.elite.0                           = 		0

#==========Seed===================
seed.0                                  =       time
seed.1                                  =       time
seed.2                                  =       time
seed.3                                  =       time

#==========Checkpoints============
checkpoint                              =		    false
checkpoint-modulo                       =       1
checkpoint-prefix                       = 	    ec

#==========Statistics============

#==========Types==================
gp.type.a.size                          =       1
gp.type.a.0.name                        =       nil
gp.type.s.size                          =       0

#==========Tree Constraints=====
gp.tc.size                              =       1
gp.tc.0                                 =       ec.gp.GPTreeConstraints
gp.tc.0.name                            =       tc0
gp.tc.0.fset                            =       f0
gp.tc.0.returns                         =       nil

#==========Tree builder=========
gp.tc.0.init                            =       ec.gp.koza.HalfBuilder

gp.koza.half.min-depth                  =       2
gp.koza.half.max-depth                  =       10
gp.koza.half.growp                      =       0.5

#==========Node Constraints=====
gp.nc.size                              =       7

gp.nc.0                                 =       ec.gp.GPNodeConstraints
gp.nc.0.name                            =       nc0
gp.nc.0.returns                         =       nil
gp.nc.0.size                            =       0

gp.nc.1                                 =       ec.gp.GPNodeConstraints
gp.nc.1.name                            =       nc1
gp.nc.1.returns                         =       nil
gp.nc.1.size                            =       1
gp.nc.1.child.0                         =       nil

gp.nc.2                                 =       ec.gp.GPNodeConstraints
gp.nc.2.name                            =       nc2
gp.nc.2.returns                         =       nil
gp.nc.2.size                            =       2
gp.nc.2.child.0                         =       nil
gp.nc.2.child.1                         =       nil

gp.nc.3                                 =       ec.gp.GPNodeConstraints
gp.nc.3.name                            =       nc3
gp.nc.3.returns                         =       nil
gp.nc.3.size                            =       3
gp.nc.3.child.0                         =       nil
gp.nc.3.child.1                         =       nil
gp.nc.3.child.2                         =       nil

gp.nc.4                                 =       ec.gp.GPNodeConstraints
gp.nc.4.name                            =       nc4
gp.nc.4.returns                         =       nil
gp.nc.4.size                            =       4
gp.nc.4.child.0                         =       nil
gp.nc.4.child.1                         =       nil
gp.nc.4.child.2                         =       nil
gp.nc.4.child.3                         =       nil

gp.nc.5                                 =       ec.gp.GPNodeConstraints
gp.nc.5.name                            =       nc5
gp.nc.5.returns                         =       nil
gp.nc.5.size                            =       5
gp.nc.5.child.0                         =       nil
gp.nc.5.child.1                         =       nil
gp.nc.5.child.2                         =       nil
gp.nc.5.child.3                         =       nil
gp.nc.5.child.4                         =       nil

gp.nc.6                                 =       ec.gp.GPNodeConstraints
gp.nc.6.name                            =       nc6
gp.nc.6.returns                         =       nil
gp.nc.6.size                            =       6
gp.nc.6.child.0                         =       nil
gp.nc.6.child.1                         =       nil
gp.nc.6.child.2                         =       nil
gp.nc.6.child.3                         =       nil
gp.nc.6.child.4                         =       nil
gp.nc.6.child.5                         =       nil

#==========ADFs=================
gp.problem.stack                        =       ec.gp.ADFStack
gp.adf-stack.context                    =       ec.gp.ADFContext
